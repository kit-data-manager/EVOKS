from django import forms


class Vocabulary_Terms_Form(forms.Form):
    OPTIONS = (
        ('a', 'A'),
        ('b', 'B'),
        ('c', 'C'),
        ('d', 'D'),
        ('e', 'E'),
        ('f', 'F'),
        ('g', 'G'),
        ('h', 'H'),
        ('i', 'I'),
        ('j', 'J'),
        ('k', 'K'),
        ('l', 'L'),
        ('m', 'M'),
        ('n', 'N'),
        ('o', 'O'),
        ('p', 'P'),
        ('q', 'Q'),
        ('r', 'R'),
        ('s', 'S'),
        ('t', 'T'),
        ('u', 'U'),
        ('v', 'V'),
        ('w', 'W'),
        ('x', 'X'),
        ('y', 'Y'),
        ('z', 'Z'),
    )
    initial_letter = forms.ChoiceField(required=False, choices=OPTIONS)

class Property_Predicate_Form(forms.Form):
    OPTIONS = (
        ('skos:Concept', 'skos:Concept'),
        ('skos:ConceptScheme', 'skos:ConceptScheme'),
        ('skos:inScheme', 'skos:inScheme'),
        ('skos:hasTopConcept', 'skos:hasTopConcept'),
        ('skos:topConceptOf', 'skos:topConceptOf'),
        ('skos:altLabel', 'skos:altLabel'),
        ('skos:hiddenLabel', 'skos:hiddenLabel'),
        ('skos:prefLabel', 'skos:prefLabel'),
        ('skos:notation', 'skos:notation'),
        ('skos:changeNote', 'skos:changeNote'),
        ('skos:definition', 'skos:definition'),
        ('skos:editorialNote', 'skos:editorialNote'),
        ('skos:example', 'skos:example'),
        ('skos:historyNote', 'skos:historyNote'),
        ('skos:note', 'skos:note'),
        ('skos:scopeNote', 'skos:scopeNote'),
        ('skos:broader', 'skos:broader'),
        ('skos:broaderTransitive', 'skos:broaderTransitive'),
        ('skos:narrower', 'skos:narrower'),
        ('skos:narrowerTransitive', 'skos:narrowerTransitive'),
        ('skos:related', 'skos:related'),
        ('skos:semanticRelation', 'skos:semanticRelation'),
        ('skos:Collection', 'skos:Collection'),
        ('skos:OrderedCollection', 'skos:OrderedCollection'),
        ('skos:member', 'skos:member'),
        ('skos:memberList', 'skos:memberList'),
        ('skos:broadMatch', 'skos:broadMatch'),
        ('skos:closeMatch', 'skos:closeMatch'),
        ('skos:exactMatch', 'skos:exactMatch'),
        ('skos:mappingRelation', 'skos:mappingRelation'),
        ('skos:narrowMatch', 'skos:narrowMatch'),
        ('skos:relatedMatch', 'skos:relatedMatch'),
        ('dct:abstract', 'dct:abstract'),
        ('dct:accessRights', 'dct:accessRights'),
        ('dct:accrualMethod', 'dct:accrualMethod'),
        ('dct:accrualPeriodicity', 'dct:accrualPeriodicity'),
        ('dct:accrualPolicy', 'dct:accrualPolicy'),
        ('dct:alternative', 'dct:alternative'),
        ('dct:audience', 'dct:audience'),
        ('dct:bibliographicCitation', 'dct:bibliographicCitation'),
        ('dct:available', 'dct:available'),
        ('dct:conformsTo', 'dct:conformsTo'),
        ('dct:contributor', 'dct:contributor'),
        ('dct:coverage', 'dct:coverage'),
        ('dct:created', 'dct:created'),
        ('dct:creator', 'dct:creator'),
        ('dct:date', 'dct:date'),
        ('dct:dateAccepted', 'dct:dateAccepted'),
        ('dct:dateCopyrighted', 'dct:dateCopyrighted'),
        ('dct:dateSubmitted', 'dct:dateSubmitted'),
        ('dct:description', 'dct:description'),
        ('dct:educationLevel', 'dct:educationLevel'),
        ('dct:extent', 'dct:extent'),
        ('dct:format', 'dct:format'),
        ('dct:hasFormat', 'dct:hasFormat'),
        ('dct:hasPart', 'dct:hasPart'),
        ('dct:hasVersion', 'dct:hasVersion'),
        ('dct:identifier', 'dct:identifier'),
        ('dct:instructionalMethod', 'dct:instructionalMethod'),
        ('dct:isFormatOf', 'dct:isFormatOf'),
        ('dct:isPartOf', 'dct:isPartOf'),
        ('dct:isReferencedBy', 'dct:isReplacedBy'),
        ('dct:isRequiredBy', 'dct:isRequiredBy'),
        ('dct:issued', 'dct:issued'),
        ('dct:isVersionOf', 'dct:isVersionOf'),
        ('dct:language', 'dct:license'),
        ('dct:mediator', 'dct:medium'),
        ('dct:modified', 'dct:provenance'),
        ('dct:publisher', 'dct:publisher'),
        ('dct:references', 'dct:references'),
        ('dct:relation', 'dct:relation'),
        ('dct:replaces', 'dct:replaces'),
        ('dct:requires', 'dct:requires'),
        ('dct:rights', 'dct:rights'),
        ('dct:rightsHolder', 'dct:rightsHolder'),
        ('dct:source', 'dct:source'),
        ('dct:spatial', 'dct:spatial'),
        ('dct:subject', 'dct:subject'),
        ('dct:tableOfContents', 'dct:tableOfContents'),
        ('dct:temporal', 'dct:temporal'),
        ('dct:title', 'dct:title'),
        ('dct:type', 'dct:type'),
        ('dct:valid', 'dct:valid'),
        ('dc:contributor', 'dc:contributor'),
        ('dc:coverage', 'dc:coverage'),
        ('dc:creator', 'dc:creator'),
        ('dc:date', 'dc:date'),
        ('dc:format', 'dc:format'),
        ('dc:description', 'dc:description'),
        ('dc:identifier', 'dc:identifier'),
        ('dc:language', 'dc:language'),
        ('dc:publisher', 'dc:publisher'),
        ('dc:relation', 'dc:relation'),
        ('dc:rights', 'dc:rights'),
        ('dc:source', 'dc:source'),
        ('dc:subject', 'dc:subject'),
        ('dc:title', 'dc:title'),
        ('dc:type', 'dc:type'), 
    )
    predicate = forms.ChoiceField(required=False, choices=OPTIONS)

class CreateVocabularyForm(forms.Form):
    """Represents the input necessary to create a vocabulary

    Args:
        forms: Subclasses the Django Form class
    """
    name = forms.SlugField(max_length=50)
    urispace = forms.CharField(max_length=100)