services:
#  proxy:
#    build: 
#      context: ./proxy
#    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_proxy
#    ports:
#      - "${PROXY_PORT:-9000}:80"
#    depends_on:
#      web:
#          condition: service_healthy
#    restart: always
#    networks:
#    - frontnet
#    mem_limit: 1024M
#    mem_reservation: 256M  
#    volumes:
#      - ./evoks/theme/static:/app/evoks/static
#      - static-skosmos-dev:/app/skosmos-dev/static
#      - static-skosmos-live:/app/skosmos-live/static
#    environment:
#      - EVOKS_URL=${EVOKS_URL:-}

  postgres:
    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_postgres
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-insecure_changeme}
      PGDATA: /data/postgres
      POSTGRES_DB: dev
    volumes:
       - postgres15:/data/postgres
    networks:
      - postgres
    mem_limit: 512M
    mem_reservation: 128M  
    restart: unless-stopped
    healthcheck:
      test: pg_isready
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m

  change-vol-ownership:
    # By default, the volume directory is owned by root
    # This would result in permissions errors when other services try to write to the volume
    # Solution: change permissions of volume
    image: ubuntu
    volumes:
      # The volumes to chown
      - fuseki-dev-backup:/tmp/change-ownership-fuseki-dev
      - fuseki-live-backup:/tmp/change-ownership-fuseki-live
      # The volumes needed for skosmos config-template copy
      - ./skosmos-dev/:/tmp/skosmos-dev
      - ./skosmos-live/:/tmp/skosmos-live
    # execute chmod to enable writing to the volume by other containers
    # write exit status to file
    # only exit status of last command is used, but thats ok since either both or none should fail
    command: >
      sh -c "(chmod -R 777 /tmp/change-ownership-fuseki-dev && chmod -R 777 /tmp/change-ownership-fuseki-live ; echo $? > /tmp/chmod_exit_status) ; 
      [ ! -s /tmp/skosmos-dev/config.ttl ] && cp -a /tmp/skosmos-dev/config-template.ttl /tmp/skosmos-dev/config.ttl || true ;
      [ ! -s /tmp/skosmos-live/config.ttl ] && cp -a /tmp/skosmos-live/config-template.ttl /tmp/skosmos-live/config.ttl || true"
    mem_limit: 256M
    mem_reservation: 64M  

  web:
    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_web
    build:
      context: "."
    entrypoint: >
      sh -c "python ./evoks/manage.py migrate && 
      python ./evoks/manage.py collectstatic --noinput --verbosity 0 && 
      gunicorn evoks.wsgi:application --bind 0.0.0.0:8000 --chdir evoks"
    ports:
      - "${EVOKS_PORT:-8000}:8000"
    depends_on:
      postgres:
          condition: service_healthy
      change-vol-ownership:
          condition: service_completed_successfully
      fuseki-dev:
          condition: service_healthy
      fuseki-live:
          condition: service_healthy
      skosmos-dev:
          condition: service_healthy
      skosmos-live:
          condition: service_healthy
    networks: 
      - postgres
      - fuseki-dev
      - fuseki-live
      - frontnet
    mem_limit: 1024M
    mem_reservation: 128M
    volumes:
      - .:/code
      - ./skosmos-dev/config.ttl:/code/skosmos-dev/config.ttl
      - ./skosmos-live/config.ttl:/code/skosmos-live/config.ttl
      - fuseki-dev-backup:/code/fuseki-dev/backup
      - fuseki-live-backup:/code/fuseki-live/backup 
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m

  fuseki-dev:
    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_fuseki-dev
    image: secoresearch/fuseki
    hostname: fuseki-dev
    environment: 
      ADMIN_PASSWORD: ${FUSEKI_PASSWORD:-insecure_changeme}
      ENABLE_DATA_WRITE: 'True'
      ENABLE_UPDATE: 'True'
      ENABLE_UPLOAD: 'True'
      JVM_ARGS: "-Xms256m -Xmx1024m"
    volumes:
      - fuseki-dev-data:/fuseki-base/databases
      - fuseki-dev-config:/fuseki-base/configuration
      - fuseki-dev-backup:/fuseki-base/backups
    networks:
      - fuseki-dev
    mem_limit: 1536M
    mem_reservation: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-S", "http://localhost:3030/$/ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m
      
  fuseki-live:
    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_fuseki-live
    image: secoresearch/fuseki
    hostname: fuseki-live
    environment: 
      ADMIN_PASSWORD: ${FUSEKI_PASSWORD:-insecure_changeme}
      ENABLE_DATA_WRITE: 'True'
      ENABLE_UPDATE: 'True'
      ENABLE_UPLOAD: 'True'
      JVM_ARGS: "-Xms256m -Xmx1024m"
    volumes:
      - fuseki-live-data:/fuseki-base/databases
      - fuseki-live-config:/fuseki-base/configuration
      - fuseki-live-backup:/fuseki-base/backups
    networks:
      - fuseki-live
    mem_limit: 1536M
    mem_reservation: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-S", "http://localhost:3030/$/ping"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m

  skosmos-dev:
    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_skosmos-dev
    build:
      context: https://github.com/NatLibFi/Skosmos.git#v2.17
      dockerfile: dockerfiles/Dockerfile.ubuntu
    hostname: skosmos-dev
    environment:
      - BASEHREFDEV=https://metarepo.nffa.eu/skosmos/
    ports: 
      - "${SKOSMOS_DEV_PORT:-8001}:80"
    depends_on:
      fuseki-dev:
          condition: service_healthy
      change-vol-ownership:
          condition: service_completed_successfully
    networks:
      - fuseki-dev
      - frontnet
    mem_limit: 256M
    mem_reservation: 64M
    volumes:
      - ./skosmos-dev/config.ttl:/var/www/html/config.ttl
      - ./helperscripts/replace-basehref.sh:/home/replace-basehref.sh
      - static-skosmos-dev:/var/www/html/resource
    restart: unless-stopped
    command: >
      /bin/bash -c "export BASEHREFDEV &&
      chmod +x /home/replace-basehref.sh &&
      /home/replace-basehref.sh /var/www/html/config.ttl $$BASEHREFDEV &&
      /usr/sbin/apache2ctl -D FOREGROUND"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m

  skosmos-live:
    container_name: evoks_${INSTANCE_NAME:-defaultinstance}_skosmos-live
    build:
      context: https://github.com/NatLibFi/Skosmos.git#v2.17
      dockerfile: dockerfiles/Dockerfile.ubuntu
    hostname: skosmos-live
    environment:
      - BASEHREFLIVE=https://metarepo.nffa.eu/skosmos-live/
    ports: 
      - "${SKOSMOS_LIVE_PORT:-8002}:80"
    depends_on:
      fuseki-live:
          condition: service_healthy
      change-vol-ownership:
          condition: service_completed_successfully
    networks:
      - fuseki-live
      - frontnet
    mem_limit: 256M
    mem_reservation: 64M
    volumes:
      - ./skosmos-live/config.ttl:/var/www/html/config.ttl
      - ./helperscripts/replace-basehref.sh:/home/replace-basehref.sh
      - static-skosmos-live:/var/www/html/resource
    restart: unless-stopped
    command: >
      /bin/bash -c "export BASEHREFLIVE &&
      chmod +x /home/replace-basehref.sh &&
      /home/replace-basehref.sh /var/www/html/config.ttl $$BASEHREFLIVE &&
      /usr/sbin/apache2ctl -D FOREGROUND"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 2m

networks:
  postgres:
    driver: bridge
  fuseki-dev:
    driver: bridge
  fuseki-live:
    driver: bridge
  frontnet:
    driver: bridge
volumes:
    postgres15:
    fuseki:
    fuseki-dev-data:
    fuseki-dev-config:
    fuseki-dev-backup:
    fuseki-live-data:
    fuseki-live-config:
    fuseki-live-backup:
    static-skosmos-dev:
    static-skosmos-live:
