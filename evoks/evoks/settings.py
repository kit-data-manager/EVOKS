from pathlib import Path
import socket
from pathlib import Path
from typing import List, Set, Dict, Tuple, Optional
import os
import socket
import environ
import os


base_dir = environ.Path(__file__) - 3  # .env is three levels up from this file, therefore - 3
env_file = str(base_dir.path('.env'))  
# Load .env manually if needed
if os.path.exists(env_file):
    environ.Env.read_env(env_file)

# Use a custom function to retrieve environment variables with fallbacks
# Default fallback is overwritten by empty string without this function
def get_env(key, fallback):
    return os.getenv(key) or fallback

"""
Django settings for evoks project.

Generated by 'django-admin startproject' using Django 3.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DOCKER_BASE_DIR = BASE_DIR.parent

FUSEKI_USER = get_env('FUSEKI_USER', 'admin')
FUSEKI_PASSWORD = get_env('FUSEKI_PASSWORD', 'insecure_changeme')
EVOKS_MAIL = get_env('EVOKS_MAIL', 'example@example.de')

DOCKER_BASE_DIR = BASE_DIR.parent


FUSEKI_DEV_HOST = 'fuseki-dev'
FUSEKI_LIVE_HOST = 'fuseki-live'

FUSEKI_DEV_BACKUP_PATH = 'fuseki-dev/backup'
FUSEKI_LIVE_BACKUP_PATH = 'fuseki-live/backup'

FUSEKI_PORT = 3030


SKOSMOS_DEV_DIR = "skosmos-dev/config.ttl"
SKOSMOS_LIVE_DIR = "skosmos-live/config.ttl"
SKOSMOS_TEST_CONFIG = "evoks/tests/skosmos/config.ttl"

SKOSMOS_DEV_PORT = get_env('SKOSMOS_DEV_PORT', '8001')
SKOSMOS_LIVE_PORT = get_env('SKOSMOS_LIVE_PORT', '8002')
PUBLICURL = get_env('PUBLICURL', 'localhost')
PROXY_PORT = get_env('PROXY_PORT', '9000')


SKOSMOS_DEV_URI = f"http://{PUBLICURL}:{PROXY_PORT}/skosmos-dev/"
SKOSMOS_LIVE_URI = f"http://{PUBLICURL}:{PROXY_PORT}/skosmos-live/"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_91@mjc8g-&q_f9io$jmicovci2bilh#)ud3$^iqhj1wnccr%t'

# SECURITY WARNING: don't run with debug turned on in production!
# convert DJANGO_DEBUG value into boolean
# default is 'False', only True when env var is set to 'True'
DEBUG = get_env('DJANGO_DEBUG', 'False') == 'True'

# set to False to disable Browser-sync
TAILWIND_DEV_MODE = False

ALLOWED_HOSTS = ['localhost', PUBLICURL]


LOGIN_REDIRECT_URL = '/vocabularies'

LOGIN_URL = '/login'


#SMTP Configuration

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = get_env('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = get_env('EMAIL_HOST_PASSWORD', '')



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'vocabularies',
    'tailwind',
    'Term',
    'Searchfunction',
    'Profile',
    'GroupProfile',
    'Comment',
    'Fuseki',
    'Tag',
    'Notification',
    'theme',
    'guardian',
]

TAILWIND_APP_NAME = 'theme'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'evoks.middleware.LoginRequiredMiddleware',
    'evoks.middleware.PartOfVocabularyMiddleware',
]

AUTHENTICATION_BACKENDS = (
    'evoks.backend.CustomBackend',
    'guardian.backends.ObjectPermissionBackend',
)

ROOT_URLCONF = 'evoks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'evoks/theme/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'evoks.wsgi.application'
FORCE_SCRIPT_NAME = get_env('EVOKS_URL', '/')

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

POSTGRES_USER = get_env('POSTGRES_USER', 'postgres')
POSTGRES_PASSWORD =get_env('POSTGRES_PASSWORD', 'insecure_changeme')
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'dev',
        'USER': POSTGRES_USER,
        'PASSWORD': POSTGRES_PASSWORD,
        'HOST': 'postgres',
        'PORT': 5432,
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

INTERNAL_IPS = [
    "127.0.0.1",
]

hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
INTERNAL_IPS += [".".join(ip.split(".")[:-1] + ["1"]) for ip in ips]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "{}/static/".format(get_env('EVOKS_URL', ''))
STATIC_ROOT = BASE_DIR / "theme/static"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Supress this warning until it is solved
# (urls.W002) Your URL pattern '/<group_name>' [name='teams'] has a route beginning with a '/'. Remove this slash as it is unnecessary. If this pattern is targeted in an include(), ensure the include() pattern has a trailing '/'.
SILENCED_SYSTEM_CHECKS = ['urls.W002']